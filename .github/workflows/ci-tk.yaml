# Copyright 2024 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: "TK CI"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit). The workflow name is prepended to avoid conflicts between
  # different workflows.
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    name: "Unit Tests and Type Checking"
    strategy:
      fail-fast: false
      matrix:
        version: [3.11]
        os: [ubuntu-22.04, nodai-amdgpu-mi300-x86-64, nodai-amdgpu-mi250-x86-64]
    runs-on: ${{matrix.os}}
    env:
      PIP_CACHE_DIR: "${{ github.workspace }}/.pip-cache"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Setting up Python"
        id: setup_python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{matrix.version}}

      - name: Cache Pip Packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        id: cache-pip
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('*requirements*.txt') }}

      - name: Install pip deps
        run: |
          python -m pip install --no-compile --upgrade pip
          # Note: We install in three steps in order to satisfy requirements
          # from non default locations first. Installing the PyTorch CPU
          # wheels saves multiple minutes and a lot of bandwidth on runner setup.
          pip install --no-compile -r pytorch-cpu-requirements.txt
          pip install --no-cache-dir -r requirements-iree-pinned.txt --upgrade
          pip install -r requirements.txt -e .

      - name: Run unit tests
        if: ${{ !cancelled() }}
        run: |
          pytest -n 4 --capture=tee-sys -vv ./tests/kernel/wave/

      - name: Test TKW runtime related stack on amdgpu
        if: "contains(matrix.os, 'amdgpu') && !cancelled()"
        run: |
          pip install --no-compile -r pytorch-rocm-requirements.txt
          export export WAVE_CACHE_DIR=$PWD/.wave
          rm -rf ./.wave
          WAVE_CACHE_ON=1 pytest --capture=tee-sys -vv --run-e2e ./tests/kernel/wave/runtime

      - name: Run e2e tests on AMD GPU MI300
        if: "contains(matrix.os, 'mi300') && !cancelled()"
        run: |
          pip install --no-compile -r pytorch-rocm-requirements.txt
          WAVE_CACHE_ON=0 pytest -n 8 --capture=tee-sys -vv --run-e2e --gpu-distribute 8 ./tests/kernel/wave/

      - name: Run e2e tests on AMD GPU MI250
        if: "contains(matrix.os, 'mi250') && !cancelled()"
        run: |
          pip install --no-compile -r pytorch-rocm-requirements.txt
          WAVE_CACHE_ON=0 pytest -n 2 --capture=tee-sys --run-e2e -vv ./tests/kernel/wave/

      - name: Run LIT tests
        if: ${{ !cancelled() }}
        run: |
          lit lit_tests/ -v

      - name: MyPy Type Checking
        if: ${{ !cancelled() }}
        run: |
          mypy
